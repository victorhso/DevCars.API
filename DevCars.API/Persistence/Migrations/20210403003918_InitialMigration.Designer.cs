// <auto-generated />
using System;
using DevCars.API.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevCars.API.Persistence.Migrations
{
    [DbContext(typeof(DevCarsDbContext))]
    [Migration("20210403003918_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevCars.API.Entities.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataProducao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Marca")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)")
                        .HasDefaultValue("Padrão");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Registrado")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VinCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("DevCars.API.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pedidoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DevCars.API.Entities.ItensPedidoExtra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.ToTable("ItensPedidosExtras");
                });

            modelBuilder.Entity("DevCars.API.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCar")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idCustomer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCar")
                        .IsUnique();

                    b.HasIndex("idCustomer");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("DevCars.API.Entities.Cliente", b =>
                {
                    b.HasOne("DevCars.API.Entities.Pedido", "pedido")
                        .WithMany()
                        .HasForeignKey("pedidoId");

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("DevCars.API.Entities.ItensPedidoExtra", b =>
                {
                    b.HasOne("DevCars.API.Entities.Pedido", null)
                        .WithMany("ItensExtras")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DevCars.API.Entities.Pedido", b =>
                {
                    b.HasOne("DevCars.API.Entities.Carro", "Car")
                        .WithOne()
                        .HasForeignKey("DevCars.API.Entities.Pedido", "IdCar")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevCars.API.Entities.Cliente", "Client")
                        .WithMany("Pedido")
                        .HasForeignKey("idCustomer")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DevCars.API.Entities.Cliente", b =>
                {
                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("DevCars.API.Entities.Pedido", b =>
                {
                    b.Navigation("ItensExtras");
                });
#pragma warning restore 612, 618
        }
    }
}
